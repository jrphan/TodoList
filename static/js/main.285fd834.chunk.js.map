{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","onSubmit","e","preventDefault","id","Math","floor","random","text","className","type","value","placeholder","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateValue","edit","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","pre","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA0CeA,MAxCf,SAAkBC,GACd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAWC,iBAAO,MAoBxB,OAlBAC,qBAAU,WACNF,EAASG,QAAQC,WAkBjB,uBAAMC,SAXW,SAAAC,GACjBA,EAAEC,iBAEFX,EAAMS,SAAS,CACXG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMd,IAEVC,EAAS,KAIqBc,UAAU,YAAxC,UACI,uBACIC,KAAK,OACLD,UAAU,aACVE,MAAOjB,EACPkB,YAAY,YACZC,KAAK,OACLC,SAtBc,SAAAZ,GACtBP,EAASO,EAAEa,OAAOJ,QAsBVK,IAAKpB,IAET,wBAAQa,UAAU,WAAlB,0B,eCYGQ,MA3Cf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAWC,EAAc,EAAdA,YAC3C,EAAwB5B,mBAAS,CAC7BW,GAAI,KACJO,MAAO,KAFX,mBAAOW,EAAP,KAAaC,EAAb,KAaA,OAAGD,EAAKlB,GACG,cAAC,EAAD,CAAUkB,KAAMA,EAAMrB,SATb,SAAAU,GAChBU,EAAYC,EAAKlB,GAAIO,GACrBY,EAAQ,CACJnB,GAAI,KACJO,MAAO,QAQRO,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACb,sBACIjB,UAAWgB,EAAKE,WAAa,oBAAsB,WADvD,UAII,qBAEIC,QAAS,kBAAMT,EAAaM,EAAKrB,KAFrC,SAIKqB,EAAKjB,MAHDiB,EAAKrB,IAKd,sBAAKK,UAAU,OAAf,UACI,cAAC,IAAD,CACImB,QAAS,kBAAMR,EAAWK,EAAKrB,KAC/BK,UAAU,WAEd,cAAC,IAAD,CACImB,QAAS,kBAAML,EAAQ,CAAEnB,GAAIqB,EAAKrB,GAAIO,MAAMc,EAAKjB,QACjDC,UAAU,cAfbiB,OC6BFG,MApDf,WACI,MAA0BpC,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcY,EAAd,KAqCA,OACI,gCACI,4DACA,cAAC,EAAD,CAAW7B,SAtCH,SAAAwB,GACZ,GAAIA,EAAKjB,OAAQ,QAAQuB,KAAKN,EAAKjB,MAAnC,CAIA,IAAMwB,EAAQ,CAAIP,GAAJ,mBAAaP,IAE3BY,EAASE,OAgCL,cAAC,EAAD,CACId,MAAOA,EACPC,aAvBS,SAAAf,GACjB,IAAI6B,EAAef,EAAMM,KAAI,SAAAC,GAIzB,OAHGA,EAAKrB,KAAOA,IACXqB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IAiBDb,WAdO,SAAAhB,GACf,IAAM8B,EAAY,YAAIhB,GAAOiB,QAAO,SAAAV,GAAI,OAAIA,EAAKrB,KAAOA,KAExD0B,EAASI,IAYDb,YAjCQ,SAACe,EAAQC,GACrBA,EAAS7B,OAAQ,QAAQuB,KAAKM,EAAS7B,OAI3CsB,GAAS,SAAAQ,GAAG,OAAIA,EAAId,KAAI,SAAAe,GAAI,OAAKA,EAAKnC,KAAOgC,EAASC,EAAWE,eCX1DC,MARf,WACE,OACE,qBAAK/B,UAAU,MAAf,SACE,cAAC,EAAD,OCFNgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.285fd834.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState('');\r\n\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    })\r\n\r\n    const handleInputChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input,\r\n        });\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"todo-form\">\r\n            <input \r\n                type=\"text\" \r\n                className=\"todo-input\" \r\n                value={input} \r\n                placeholder=\"Add to do\" \r\n                name=\"text\" \r\n                onChange={handleInputChange}\r\n                ref={inputRef}\r\n            />\r\n            <button className=\"todo-btn\">Add todo</button>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\n\r\nfunction Todo({todos, completeTodo, removeTodo,updateValue}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n    });\r\n\r\n    const submitValue = value => {\r\n        updateValue(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitValue}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div \r\n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'} \r\n            key={index}\r\n        >   \r\n            <div\r\n                key={todo.id}\r\n                onClick={() => completeTodo(todo.id)}\r\n            >\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icon\">\r\n                <RiCloseCircleLine\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className=\"delete\"\r\n                />\r\n                <TiEdit\r\n                    onClick={() => setEdit({ id: todo.id, value:todo.text})}\r\n                    className=\"edit\"\r\n                />\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) { \r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const updateValue = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) { \r\n            return;\r\n        }\r\n\r\n        setTodos(pre => pre.map(item => (item.id === todoId ? newValue : item)));\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removeArr);\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>What's the plan for Today?</h1>\r\n            <TodoForm  onSubmit={addTodo}/>\r\n            <Todo\r\n                todos={todos}\r\n                completeTodo={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateValue={updateValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}